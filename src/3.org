#+TITLE: Skills, Tactics, Plays - Beginner
#+AUTHOR: Jay Kamat
#+EMAIL: jaygkamat@gmail.com
#+REVEAL_ROOT: https://cdn.jsdelivr.net/reveal.js/3.0.0/
#+REVEAL_THEME: black
#+REVEAL_TRANS: linear
#+REVEAL_SPEED: fast
#+REVEAL_PLUGINS: (notes pdf)
#+REVEAL_HLEVEL: 1
#+OPTIONS: toc:nil timestamp:nil reveal_control:t num:nil reveal_history:t tags:nil author:nil

# Export section for md
* Training Summary 3 {#t20163}                                         :docs:
* Questions about Plays?
- Last meeting was pretty dense
- Topics Covered:
  - Python
  - State Machines
  - Play/Skill/Tactic Structure
** Additional Information                                             :docs:
- See the previous slide deck and docs for more information, they should be a pretty comprehensive overview of our play system.
* Subbehaviors
- A Behavior is a generic name for any skill, play, or tactic.
- Last meeting we learned about Plays/Skills/Tactics
  - How do we put them together?
- Subbehaviors allow you to reuse our behaviors in many plays.
  - Example: We have /one/ move play, used by kicker tactics, passing tactics, goalie, etc.
** Examples of Subbehaviors
- Offense Play contains Passing Tactics, and Move Skills
- Passing Tactic Contains Move and Kick Skills
** /Behavior/ Tree!
#+BEGIN_SRC text
Basic122::running
    Mark::running[robot=4]
        move(0.767296, 6.51286)
        endVelocity(0, 0)
        face(0.160718, 9.15305)
    PivotKick::capturing
        Capture::course_approach[robot=2]
            face(0.160718, 9.15305)
            avoidBall(-1)
            move(0.176939, 9.114)
            endVelocity(0, 0)
    Mark::running[robot=1]
        move(-0.829012, 6.03814)
        endVelocity(0, 0)
        face(0.160718, 9.15305)
#+END_SRC
** /Behavior/ Tree!
#+BEGIN_SRC text
Basic122::running
    Defense::defending
        SubmissiveDefender::marking
            Move::completed[robot=5]
                face(0.160718, 9.15305)
        SubmissiveDefender::marking
            Move::completed[robot=3]
                face(0.160718, 9.15305)
        SubmissiveGoalie::block
            Move::running[robot=0]
                face(0.160718, 9.15305)
                move(0.290916, 0.14)
                endVelocity(0, 0)
#+END_SRC
* How do I use subbehaviors?
** Adding Subbehaviors
#+BEGIN_SRC python
  self.add_subbehavior(skill_object,
                       "Name of Subbehavior",
                       required=False or True
                       priority=10) # A lower number is higher priority
#+END_SRC
** Removing Subbehaviors
#+BEGIN_SRC python
self.remove_subbehavior('string name')

self.remove_all_subbehaviors()
#+END_SRC
** Getting Subbehavior Plays
#+BEGIN_SRC python
a_subbheavior = self.subbehavior_with_name('string name')
#+END_SRC
* Real Examples
** Line Up Tactic
- First State Machine is set up, then:
#+BEGIN_SRC python
  # Triggered whenever the line changes
  self.remove_all_subbehaviors()
  for i in range(6):
      pt = self._line.get_pt(0) + (self.diff * float(i))
      self.add_subbehavior(
          skills.move.Move(pt),
          name="robot" + str(i),
          required=False,
          priority=6 - i)
#+END_SRC

#+BEGIN_SRC python
 def execute_running(self):
        for i in range(6):
            pt = self._line.get_pt(0) + (self.diff * float(i))
            self.subbehavior_with_name("robot" + str(i)).pos = pt
#+END_SRC
* Assignment
- Create a binary clock play
- Display the current minute in binary on the field
  - Use a robot to represent a 1, and lack of a robot to represent a 0
** Tips
#+BEGIN_SRC python :exports both :results output :cache yes
import time
mins =  time.localtime().tm_min
binary = format(mins, '06b')
print(binary)
# Index with binary[0-6]
#+END_SRC

#+RESULTS[2cdccf696e363d1f51ce50c0b895bf17a58a9b55]:
: 010011
